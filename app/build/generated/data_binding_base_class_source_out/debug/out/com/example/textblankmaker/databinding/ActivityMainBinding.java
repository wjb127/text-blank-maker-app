// Generated by view binder compiler. Do not edit!
package com.example.textblankmaker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.textblankmaker.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton copyButton;

  @NonNull
  public final MaterialButton generateButton;

  @NonNull
  public final TextInputEditText inputText;

  @NonNull
  public final CircularProgressIndicator progressIndicator;

  @NonNull
  public final TextInputEditText resultText;

  @NonNull
  public final MaterialToolbar topAppBar;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton copyButton, @NonNull MaterialButton generateButton,
      @NonNull TextInputEditText inputText, @NonNull CircularProgressIndicator progressIndicator,
      @NonNull TextInputEditText resultText, @NonNull MaterialToolbar topAppBar) {
    this.rootView = rootView;
    this.copyButton = copyButton;
    this.generateButton = generateButton;
    this.inputText = inputText;
    this.progressIndicator = progressIndicator;
    this.resultText = resultText;
    this.topAppBar = topAppBar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.copyButton;
      MaterialButton copyButton = ViewBindings.findChildViewById(rootView, id);
      if (copyButton == null) {
        break missingId;
      }

      id = R.id.generateButton;
      MaterialButton generateButton = ViewBindings.findChildViewById(rootView, id);
      if (generateButton == null) {
        break missingId;
      }

      id = R.id.inputText;
      TextInputEditText inputText = ViewBindings.findChildViewById(rootView, id);
      if (inputText == null) {
        break missingId;
      }

      id = R.id.progressIndicator;
      CircularProgressIndicator progressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (progressIndicator == null) {
        break missingId;
      }

      id = R.id.resultText;
      TextInputEditText resultText = ViewBindings.findChildViewById(rootView, id);
      if (resultText == null) {
        break missingId;
      }

      id = R.id.topAppBar;
      MaterialToolbar topAppBar = ViewBindings.findChildViewById(rootView, id);
      if (topAppBar == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, copyButton, generateButton,
          inputText, progressIndicator, resultText, topAppBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
