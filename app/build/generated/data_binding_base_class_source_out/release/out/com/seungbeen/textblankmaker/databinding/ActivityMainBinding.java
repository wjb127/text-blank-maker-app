// Generated by view binder compiler. Do not edit!
package com.seungbeen.textblankmaker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.seungbeen.textblankmaker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton copyButton;

  @NonNull
  public final MaterialButton generateButton;

  @NonNull
  public final TextInputLayout inputLayout;

  @NonNull
  public final TextInputEditText inputText;

  @NonNull
  public final TextInputLayout outputLayout;

  @NonNull
  public final TextInputEditText outputText;

  @NonNull
  public final ProgressBar progressBar;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton copyButton, @NonNull MaterialButton generateButton,
      @NonNull TextInputLayout inputLayout, @NonNull TextInputEditText inputText,
      @NonNull TextInputLayout outputLayout, @NonNull TextInputEditText outputText,
      @NonNull ProgressBar progressBar) {
    this.rootView = rootView;
    this.copyButton = copyButton;
    this.generateButton = generateButton;
    this.inputLayout = inputLayout;
    this.inputText = inputText;
    this.outputLayout = outputLayout;
    this.outputText = outputText;
    this.progressBar = progressBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.copyButton;
      MaterialButton copyButton = ViewBindings.findChildViewById(rootView, id);
      if (copyButton == null) {
        break missingId;
      }

      id = R.id.generateButton;
      MaterialButton generateButton = ViewBindings.findChildViewById(rootView, id);
      if (generateButton == null) {
        break missingId;
      }

      id = R.id.inputLayout;
      TextInputLayout inputLayout = ViewBindings.findChildViewById(rootView, id);
      if (inputLayout == null) {
        break missingId;
      }

      id = R.id.inputText;
      TextInputEditText inputText = ViewBindings.findChildViewById(rootView, id);
      if (inputText == null) {
        break missingId;
      }

      id = R.id.outputLayout;
      TextInputLayout outputLayout = ViewBindings.findChildViewById(rootView, id);
      if (outputLayout == null) {
        break missingId;
      }

      id = R.id.outputText;
      TextInputEditText outputText = ViewBindings.findChildViewById(rootView, id);
      if (outputText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, copyButton, generateButton,
          inputLayout, inputText, outputLayout, outputText, progressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
